{"version":3,"file":"chartjs-plugin-annotation.min.js","sources":["src/events.js","src/types/box.js","src/types/line.js","src/annotation.js","src/index.js"],"sourcesContent":["import {distanceBetweenPoints} from 'chart.js/helpers';\r\n\r\nexport default function handleEvent(event, elements) {\r\n\tconst element = getNearestItem(elements, event);\r\n\tconst native = event.native;\r\n\tconst eventHandlers = [];\r\n\r\n\tif (native.type === 'mousemove') {\r\n\t\taddHoverEvents(eventHandlers, native, elements, element);\r\n\t} else if (element && detectDoubleClick(native, element)) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Dispatch the event to the usual handler, but only if we haven't substituted it\r\n\tif (element && eventHandlers.length === 0) {\r\n\t\taddEventHandler(eventHandlers, native, element);\r\n\t}\r\n\r\n\tif (eventHandlers.length > 0) {\r\n\t\tnative.stopImmediatePropagation();\r\n\t\tnative.preventDefault();\r\n\t\teventHandlers.forEach((eventHandler) => {\r\n\t\t\t// [handler, event, element]\r\n\t\t\teventHandler[0].call(eventHandler[2], eventHandler[1]);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction addHoverEvents(eventHandlers, event, elements, element) {\r\n\tif (element && !element.hovering) {\r\n\t\t['mouseenter', 'mouseover'].forEach((eventName) => {\r\n\t\t\telement.hovering = true;\r\n\t\t\tconst hoverEvent = createMouseEvent(eventName, event);\r\n\t\t\taddEventHandler(eventHandlers, hoverEvent, element);\r\n\t\t});\r\n\t} else if (!element) {\r\n\t\telements.forEach((el) => {\r\n\t\t\tif (el.hovering) {\r\n\t\t\t\tel.hovering = false;\r\n\t\t\t\t['mouseout', 'mouseleave'].forEach((eventName) => {\r\n\t\t\t\t\tconst hoverEvent = createMouseEvent(eventName, event);\r\n\t\t\t\t\taddEventHandler(eventHandlers, hoverEvent, el);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction addEventHandler(eventHandlers, event, element) {\r\n\tconst options = element.options || {};\r\n\tconst eventHandlerName = getEventHandlerName(event.type);\r\n\tconst handler = options[eventHandlerName];\r\n\tif (typeof handler === 'function') {\r\n\t\teventHandlers.push([handler, event, element]);\r\n\t}\r\n}\r\n\r\nfunction detectDoubleClick(event, element, dblClickSpeed) {\r\n\t// Suppress duplicate click events during a double click\r\n\t// 1. click -> 2. click -> 3. dblclick\r\n\t//\r\n\t// 1: wait dblClickSpeed ms, then fire click\r\n\t// 2: cancel (1) if it is waiting then wait dblClickSpeed ms then fire click, else fire click immediately\r\n\t// 3: cancel (1) or (2) if waiting, then fire dblclick\r\n\r\n\tconst options = element.options || {};\r\n\tif (event.type === 'click' && typeof options.onClick === 'function') {\r\n\t\tclearTimeout(element.clickTimeout);\r\n\t\telement.clickTimeout = setTimeout(() => {\r\n\t\t\tdelete element.clickTimeout;\r\n\t\t\toptions.onClick.call(element, event);\r\n\t\t}, dblClickSpeed);\r\n\t\tevent.stopImmediatePropagation();\r\n\t\tevent.preventDefault();\r\n\t\treturn true;\r\n\t} else if (event.type === 'dblclick' && element.clickTimeout) {\r\n\t\tclearTimeout(element.clickTimeout);\r\n\t\tdelete element.clickTimeout;\r\n\t}\r\n}\r\n\r\nfunction getEventHandlerName(eventName) {\r\n\treturn 'on' + eventName[0].toUpperCase() + eventName.substring(1);\r\n}\r\n\r\nfunction createMouseEvent(type, previousEvent) {\r\n\ttry {\r\n\t\treturn new MouseEvent(type, previousEvent);\r\n\t} catch (exception) {\r\n\t\ttry {\r\n\t\t\tconst m = document.createEvent('MouseEvent');\r\n\t\t\tm.initMouseEvent(\r\n\t\t\t\ttype,\r\n\t\t\t\tpreviousEvent.canBubble,\r\n\t\t\t\tpreviousEvent.cancelable,\r\n\t\t\t\tpreviousEvent.view,\r\n\t\t\t\tpreviousEvent.detail,\r\n\t\t\t\tpreviousEvent.screenX,\r\n\t\t\t\tpreviousEvent.screenY,\r\n\t\t\t\tpreviousEvent.clientX,\r\n\t\t\t\tpreviousEvent.clientY,\r\n\t\t\t\tpreviousEvent.ctrlKey,\r\n\t\t\t\tpreviousEvent.altKey,\r\n\t\t\t\tpreviousEvent.shiftKey,\r\n\t\t\t\tpreviousEvent.metaKey,\r\n\t\t\t\tpreviousEvent.button,\r\n\t\t\t\tpreviousEvent.relatedTarget\r\n\t\t\t);\r\n\t\t\treturn m;\r\n\t\t} catch (exception2) {\r\n\t\t\tconst e = document.createEvent('Event');\r\n\t\t\te.initEvent(\r\n\t\t\t\ttype,\r\n\t\t\t\tpreviousEvent.canBubble,\r\n\t\t\t\tpreviousEvent.cancelable\r\n\t\t\t);\r\n\t\t\treturn e;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getNearestItem(elements, position) {\r\n\tlet minDistance = Number.POSITIVE_INFINITY;\r\n\r\n\treturn elements\r\n\t\t.filter((element) => element.inRange(position.x, position.y))\r\n\t\t.reduce((nearestItems, element) => {\r\n\t\t\tconst center = element.getCenterPoint();\r\n\t\t\tconst distance = distanceBetweenPoints(position, center);\r\n\r\n\t\t\tif (distance < minDistance) {\r\n\t\t\t\tnearestItems = [element];\r\n\t\t\t\tminDistance = distance;\r\n\t\t\t} else if (distance === minDistance) {\r\n\t\t\t\t// Can have multiple items at the same distance in which case we sort by size\r\n\t\t\t\tnearestItems.push(element);\r\n\t\t\t}\r\n\r\n\t\t\treturn nearestItems;\r\n\t\t}, [])\r\n\t\t.sort((a, b) => {\r\n\t\t\t// If there are multiple elements equally close,\r\n\t\t\t// sort them by size, then by index\r\n\t\t\tconst sizeA = a.getArea();\r\n\t\t\tconst sizeB = b.getArea();\r\n\t\t\treturn (sizeA > sizeB || sizeA < sizeB) ? sizeA - sizeB : a._index - b._index;\r\n\t\t})\r\n\t\t.slice(0, 1)[0]; // return only the top item\r\n}\r\n","import {Element} from 'chart.js';\r\n\r\nexport default class BoxAnnotation extends Element {\r\n\tinRange(mouseX, mouseY, useFinalPosition) {\r\n\t\tconst {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\r\n\r\n\t\treturn mouseX >= x &&\r\n\t\t\tmouseX <= x + width &&\r\n\t\t\tmouseY >= y &&\r\n\t\t\tmouseY <= y + height;\r\n\t}\r\n\r\n\tgetCenterPoint(useFinalPosition) {\r\n\t\tconst {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\r\n\t\treturn {\r\n\t\t\tx: x + width / 2,\r\n\t\t\ty: y + height / 2\r\n\t\t};\r\n\t}\r\n\r\n\tdraw(ctx) {\r\n\t\tconst {x, y, width, height, options} = this;\r\n\r\n\t\tctx.save();\r\n\r\n\t\tctx.lineWidth = options.borderWidth;\r\n\t\tctx.strokeStyle = options.borderColor;\r\n\t\tctx.fillStyle = options.backgroundColor;\r\n\r\n\t\tctx.fillRect(x, y, width, height);\r\n\t\tctx.strokeRect(x, y, width, height);\r\n\r\n\t\tctx.restore();\r\n\t}\r\n}\r\n\r\nBoxAnnotation.id = 'boxAnnotation';\r\n\r\nBoxAnnotation.defaults = {\r\n\tborderWidth: 1\r\n};\r\n\r\nBoxAnnotation.defaultRoutes = {\r\n\tborderColor: 'color',\r\n\tbackgroundColor: 'color'\r\n};\r\n","import {Element, defaults} from 'chart.js';\r\nimport {isArray, fontString} from 'chart.js/helpers';\r\n\r\nconst PI = Math.PI;\r\nconst HALF_PI = PI / 2;\r\n\r\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\r\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\r\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\r\n\r\nexport default class LineAnnotation extends Element {\r\n\tintersects(x, y, epsilon) {\r\n\t\tepsilon = epsilon || 0.001;\r\n\t\tconst me = this;\r\n\t\tconst p1 = {x: me.x, y: me.y};\r\n\t\tconst p2 = {x: me.x2, y: me.y2};\r\n\t\tconst dy = interpolateY(x, p1, p2);\r\n\t\tconst dx = interpolateX(y, p1, p2);\r\n\t\treturn (\r\n\t\t\t(!isFinite(dy) || Math.abs(y - dy) < epsilon) &&\r\n\t\t\t(!isFinite(dx) || Math.abs(x - dx) < epsilon)\r\n\t\t);\r\n\t}\r\n\r\n\tlabelIsVisible() {\r\n\t\tconst label = this.options.label;\r\n\t\treturn label && label.enabled && label.content;\r\n\t}\r\n\r\n\tisOnLabel(x, y) {\r\n\t\tconst labelRect = this.labelRect || {};\r\n\t\tconst w2 = labelRect.width / 2;\r\n\t\tconst h2 = labelRect.height / 2;\r\n\t\treturn this.labelIsVisible() &&\r\n\t\t\tx >= labelRect.x - w2 &&\r\n\t\t\tx <= labelRect.x + w2 &&\r\n\t\t\ty >= labelRect.y - h2 &&\r\n\t\t\ty <= labelRect.y + h2;\r\n\t}\r\n\r\n\tinRange(x, y) {\r\n\t\tconst epsilon = this.options.borderWidth || 1;\r\n\t\treturn this.intersects(x, y, epsilon) || this.isOnLabel(x, y);\r\n\t}\r\n\r\n\tgetCenterPoint() {\r\n\t\treturn {\r\n\t\t\tx: (this.x2 + this.x) / 2,\r\n\t\t\ty: (this.y2 + this.y) / 2\r\n\t\t};\r\n\t}\r\n\r\n\tdraw(ctx) {\r\n\t\tconst {x, y, x2, y2, options} = this;\r\n\t\tctx.save();\r\n\r\n\t\tctx.lineWidth = options.borderWidth;\r\n\t\tctx.strokeStyle = options.borderColor;\r\n\r\n\t\tif (ctx.setLineDash) {\r\n\t\t\tctx.setLineDash(options.borderDash);\r\n\t\t}\r\n\t\tctx.lineDashOffset = options.borderDashOffset;\r\n\r\n\t\t// Draw\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(x, y);\r\n\t\tctx.lineTo(x2, y2);\r\n\t\tctx.stroke();\r\n\r\n\t\tif (this.labelIsVisible()) {\r\n\t\t\tdrawLabel(ctx, this);\r\n\t\t}\r\n\r\n\t\tctx.restore();\r\n\t}\r\n}\r\n\r\nLineAnnotation.id = 'lineAnnotation';\r\nLineAnnotation.defaults = {\r\n\tborderDash: [],\r\n\tborderDashOffset: 0,\r\n\tlabel: {\r\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\r\n\t\tfont: {\r\n\t\t\tfamily: defaults.font.family,\r\n\t\t\tsize: defaults.font.size,\r\n\t\t\tstyle: 'bold',\r\n\t\t\tcolor: '#fff',\r\n\t\t},\r\n\t\txPadding: 6,\r\n\t\tyPadding: 6,\r\n\t\trotation: 0,\r\n\t\tcornerRadius: 6,\r\n\t\tposition: 'center',\r\n\t\txAdjust: 0,\r\n\t\tyAdjust: 0,\r\n\t\tenabled: false,\r\n\t\tcontent: null\r\n\t}\r\n};\r\n\r\nfunction drawLabel(ctx, line) {\r\n\tconst label = line.options.label;\r\n\r\n\tctx.font = fontString(\r\n\t\tlabel.font.size,\r\n\t\tlabel.font.style,\r\n\t\tlabel.font.family\r\n\t);\r\n\tctx.textAlign = 'center';\r\n\r\n\tconst {width, height} = measureLabel(ctx, label);\r\n\tconst pos = calculateLabelPosition(line, width, height);\r\n\tline.labelRect = {x: pos.x, y: pos.y, width, height};\r\n\r\n\tctx.translate(pos.x, pos.y);\r\n\tctx.rotate(label.rotation * PI / 180);\r\n\r\n\tctx.fillStyle = label.backgroundColor;\r\n\troundedRect(ctx, -(width / 2), -(height / 2), width, height, label.cornerRadius);\r\n\tctx.fill();\r\n\r\n\tctx.fillStyle = label.font.color;\r\n\tif (isArray(label.content)) {\r\n\t\tlet textYPosition = -(height / 2) + label.yPadding;\r\n\t\tfor (let i = 0; i < label.content.length; i++) {\r\n\t\t\tctx.textBaseline = 'top';\r\n\t\t\tctx.fillText(\r\n\t\t\t\tlabel.content[i],\r\n\t\t\t\t-(width / 2) + (width / 2),\r\n\t\t\t\ttextYPosition\r\n\t\t\t);\r\n\r\n\t\t\ttextYPosition += label.font.size + label.yPadding;\r\n\t\t}\r\n\t} else {\r\n\t\tctx.textBaseline = 'middle';\r\n\t\tctx.fillText(label.content, 0, 0);\r\n\t}\r\n}\r\n\r\nconst widthCache = new Map();\r\nfunction measureLabel(ctx, label) {\r\n\tconst content = label.content;\r\n\tconst lines = isArray(content) ? content : [content];\r\n\tconst count = lines.length;\r\n\tlet width = 0;\r\n\tfor (let i = 0; i < count; i++) {\r\n\t\tconst text = lines[i];\r\n\t\tif (!widthCache.has(text)) {\r\n\t\t\twidthCache.set(text, ctx.measureText(text).width);\r\n\t\t}\r\n\t\twidth = Math.max(width, widthCache.get(text));\r\n\t}\r\n\twidth += 2 * label.xPadding;\r\n\r\n\treturn {\r\n\t\twidth,\r\n\t\theight: count * label.font.size + ((count + 1) * label.yPadding)\r\n\t};\r\n}\r\n\r\nfunction calculateLabelPosition(line, width, height) {\r\n\tconst label = line.options.label;\r\n\tconst {xPadding, xAdjust, yPadding, yAdjust} = label;\r\n\tconst p1 = {x: line.x, y: line.y};\r\n\tconst p2 = {x: line.x2, y: line.y2};\r\n\tlet x, y, pt;\r\n\r\n\tswitch (label.position) {\r\n\tcase 'top':\r\n\t\ty = yPadding + yAdjust;\r\n\t\tx = interpolateX(y, p1, p2);\r\n\t\tbreak;\r\n\tcase 'bottom':\r\n\t\ty = height - yPadding + yAdjust;\r\n\t\tx = interpolateX(y, p1, p2);\r\n\t\tbreak;\r\n\tcase 'left':\r\n\t\tx = xPadding + xAdjust;\r\n\t\ty = interpolateY(x, p1, p2);\r\n\t\tbreak;\r\n\tcase 'right':\r\n\t\tx = width - xPadding + xAdjust;\r\n\t\ty = interpolateY(x, p1, p2);\r\n\t\tbreak;\r\n\tdefault:\r\n\t\tpt = pointInLine(p1, p2, 0.5);\r\n\t\tx = pt.x + xAdjust;\r\n\t\ty = pt.y + yAdjust;\r\n\t}\r\n\treturn {x, y};\r\n}\r\n\r\n\r\n/**\r\n * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n * given size (width, height) and the same `radius` for all corners.\r\n * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n * @param {number} x - The x axis of the coordinate for the rectangle starting point.\r\n * @param {number} y - The y axis of the coordinate for the rectangle starting point.\r\n * @param {number} width - The rectangle's width.\r\n * @param {number} height - The rectangle's height.\r\n * @param {number} radius - The rounded amount (in pixels) for the four corners.\r\n * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n */\r\nfunction roundedRect(ctx, x, y, width, height, radius) {\r\n\tif (radius) {\r\n\t\tconst r = Math.min(radius, height / 2, width / 2);\r\n\t\tconst left = x + r;\r\n\t\tconst top = y + r;\r\n\t\tconst right = x + width - r;\r\n\t\tconst bottom = y + height - r;\r\n\r\n\t\tctx.moveTo(x, top);\r\n\t\tif (left < right && top < bottom) {\r\n\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\r\n\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\r\n\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\r\n\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\r\n\t\t} else if (left < right) {\r\n\t\t\tctx.moveTo(left, y);\r\n\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\r\n\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\r\n\t\t} else if (top < bottom) {\r\n\t\t\tctx.arc(left, top, r, -PI, 0);\r\n\t\t\tctx.arc(left, bottom, r, 0, PI);\r\n\t\t} else {\r\n\t\t\tctx.arc(left, top, r, -PI, PI);\r\n\t\t}\r\n\t\tctx.closePath();\r\n\t\tctx.moveTo(x, y);\r\n\t} else {\r\n\t\tctx.rect(x, y, width, height);\r\n\t}\r\n}\r\n","import {Animations} from 'chart.js';\r\nimport {clipArea, unclipArea, isFinite, merge, valueOrDefault} from 'chart.js/helpers';\r\nimport handleEvent from './events';\r\nimport BoxAnnotation from './types/box';\r\nimport LineAnnotation from './types/line';\r\n\r\nconst chartElements = new Map();\r\n\r\nconst annotationTypes = {\r\n\tbox: BoxAnnotation,\r\n\tline: LineAnnotation\r\n};\r\n\r\nexport default {\r\n\tid: 'annotation',\r\n\r\n\tbeforeUpdate(chart, options) {\r\n\t\tbindAfterDataLimits(chart, options);\r\n\t},\r\n\r\n\tafterUpdate(chart, options) {\r\n\t\tupdateElements(chart, options);\r\n\t},\r\n\r\n\tresize(chart, options) {\r\n\t\tupdateElements(chart, options, 'resize');\r\n\t},\r\n\r\n\tbeforeDatasetDraw(chart, options) {\r\n\t\tdraw(chart, options, 'beforeDatasetsDraw');\r\n\t},\r\n\r\n\tafterDatasetsDraw(chart, options) {\r\n\t\tdraw(chart, options, 'afterDatasetsDraw');\r\n\t},\r\n\r\n\tafterDraw(chart, options) {\r\n\t\tdraw(chart, options, 'afterDraw');\r\n\t},\r\n\r\n\tafterEvent(chart, event, _replay, options) {\r\n\t\tconst events = options.events || [];\r\n\t\tif (events.indexOf(event.type) !== -1) {\r\n\t\t\thandleEvent(event, chartElements.get(chart));\r\n\t\t}\r\n\t},\r\n\r\n\tdestroy(chart) {\r\n\t\tchartElements.remove(chart);\r\n\t},\r\n\r\n\tdefaults: {\r\n\t\tdrawTime: 'afterDatasetsDraw',\r\n\t\tdblClickSpeed: 350, // ms\r\n\t\tevents: [],\r\n\t\tannotations: [],\r\n\t\tanimation: {\r\n\t\t\tnumbers: {\r\n\t\t\t\tproperties: ['x', 'y', 'x2', 'y2', 'width', 'height'],\r\n\t\t\t\ttype: 'number'\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n};\r\n\r\nfunction updateElements(chart, options, mode) {\r\n\tconst chartAnims = chart.options.animation;\r\n\tconst animOpts = chartAnims && merge({}, [chartAnims, options.animation]);\r\n\tconst animations = new Animations(chart, animOpts, mode);\r\n\r\n\tconst elements = chartElements.get(chart) || (chartElements.set(chart, []).get(chart));\r\n\tconst annotations = options.annotations || [];\r\n\tconst count = annotations.length;\r\n\tconst start = elements.length;\r\n\r\n\tif (start < count) {\r\n\t\tconst add = count - start;\r\n\t\telements.splice(start, 0, ...new Array(add));\r\n\t} else if (start > count) {\r\n\t\telements.splice(count, start - count);\r\n\t}\r\n\tfor (let i = 0; i < annotations.length; i++) {\r\n\t\tconst annotation = annotations[i];\r\n\t\tlet el = elements[i];\r\n\t\tconst elType = annotationTypes[annotation.type] || annotationTypes.line;\r\n\t\tif (!el || !(el instanceof elType)) {\r\n\t\t\tel = elements[i] = new elType();\r\n\t\t}\r\n\t\tconst properties = calculateElementProperties(chart, annotation, elType.defaults);\r\n\t\tanimations.update(el, properties);\r\n\t}\r\n}\r\n\r\nconst scaleValue = (scale, value, fallback) => isFinite(value) ? scale.getPixelForValue(value) : fallback;\r\n\r\nfunction calculateElementProperties(chart, options, defaults) {\r\n\tconst scale = chart.scales[options.scaleID];\r\n\r\n\tlet {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\r\n\tlet min, max;\r\n\r\n\tif (scale) {\r\n\t\tmin = scaleValue(scale, options.value, NaN);\r\n\t\tmax = scaleValue(scale, options.endValue, min);\r\n\t\tif (scale.isHorizontal()) {\r\n\t\t\tx = Math.min(min, max);\r\n\t\t\tx2 = Math.max(min, max);\r\n\t\t} else {\r\n\t\t\ty = Math.min(min, max);\r\n\t\t\ty2 = Math.max(min, max);\r\n\t\t}\r\n\t} else {\r\n\t\tconst xScale = chart.scales[options.xScaleID];\r\n\t\tconst yScale = chart.scales[options.yScaleID];\r\n\r\n\t\tif (xScale) {\r\n\t\t\tmin = scaleValue(xScale, options.xMin, x);\r\n\t\t\tmax = scaleValue(xScale, options.xMax, x2);\r\n\t\t\tx = Math.min(min, max);\r\n\t\t\tx2 = Math.max(min, max);\r\n\t\t}\r\n\r\n\t\tif (yScale) {\r\n\t\t\tmin = scaleValue(yScale, options.yMin, y2);\r\n\t\t\tmax = scaleValue(yScale, options.yMax, y);\r\n\t\t\ty = Math.min(min, max);\r\n\t\t\ty2 = Math.max(min, max);\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tx,\r\n\t\ty,\r\n\t\tx2,\r\n\t\ty2,\r\n\t\twidth: x2 - x,\r\n\t\theight: y2 - y,\r\n\t\toptions: merge(Object.create(null), [defaults, options])\r\n\t};\r\n}\r\n\r\nfunction draw(chart, options, caller) {\r\n\tconst {ctx, chartArea} = chart;\r\n\tconst elements = chartElements.get(chart);\r\n\r\n\tclipArea(ctx, chartArea);\r\n\tfor (let i = 0; i < elements.length; i++) {\r\n\t\tconst el = elements[i];\r\n\t\tif ((el.options.drawTime || options.drawTime || caller) === caller) {\r\n\t\t\tel.draw(ctx);\r\n\t\t}\r\n\t}\r\n\tunclipArea(ctx);\r\n}\r\n\r\nconst binds = new WeakSet();\r\nfunction bindAfterDataLimits(chart, options) {\r\n\tconst scales = chart.scales || {};\r\n\tObject.keys(scales).forEach(id => {\r\n\t\tconst scale = chart.scales[id];\r\n\t\tif (binds.has(scale)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst originalHook = scale.afterDataLimits;\r\n\t\tscale.afterDataLimits = function(...args) {\r\n\t\t\tif (originalHook) {\r\n\t\t\t\toriginalHook.apply(scale, [...args]);\r\n\t\t\t}\r\n\t\t\tadjustScaleRange(scale, options);\r\n\t\t};\r\n\t\tbinds.add(scale);\r\n\t});\r\n}\r\n\r\nfunction adjustScaleRange(scale, options) {\r\n\tconst annotations = options.annotations || [];\r\n\tconst range = getScaleLimits(scale, annotations);\r\n\tlet changed = false;\r\n\tif (isFinite(range.min) &&\r\n\t\ttypeof scale.options.min === 'undefined' &&\r\n\t\ttypeof scale.options.suggestedMin === 'undefined') {\r\n\t\tscale.min = range.min;\r\n\t\tchanged = true;\r\n\t}\r\n\tif (isFinite(range.max) &&\r\n\t\ttypeof scale.options.max === 'undefined' &&\r\n\t\ttypeof scale.options.suggestedMax === 'undefined') {\r\n\t\tscale.max = range.max;\r\n\t\tchanged = true;\r\n\t}\r\n\tif (changed && typeof scale.handleTickRangeOptions === 'function') {\r\n\t\tscale.handleTickRangeOptions();\r\n\t}\r\n}\r\n\r\nfunction getScaleLimits(scale, annotations) {\r\n\tconst axis = scale.axis;\r\n\tconst scaleID = scale.id;\r\n\tconst scaleIDOption = scale.axis + 'ScaleID';\r\n\tconst scaleAnnotations = annotations.filter(annotation => annotation[scaleIDOption] === scaleID || annotation.scaleID === scaleID);\r\n\tlet min = valueOrDefault(scale.min, Number.NEGATIVE_INFINITY);\r\n\tlet max = valueOrDefault(scale.max, Number.POSITIVE_INFINITY);\r\n\tscaleAnnotations.forEach(annotation => {\r\n\t\t['value', 'endValue', axis + 'Min', axis + 'Max'].forEach(prop => {\r\n\t\t\tif (prop in annotation) {\r\n\t\t\t\tconst value = annotation[prop];\r\n\t\t\t\tmin = Math.min(min, value);\r\n\t\t\t\tmax = Math.max(max, value);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn {min, max};\r\n}\r\n\r\n","import {Chart} from 'chart.js';\r\nimport Annotation from './annotation';\r\nimport BoxAnnotation from './types/box';\r\nimport LineAnnotation from './types/line';\r\n\r\nChart.register(Annotation, BoxAnnotation, LineAnnotation);\r\n\r\nexport default Annotation;\r\n"],"names":["handleEvent","event","elements","element","position","minDistance","Number","POSITIVE_INFINITY","filter","inRange","x","y","reduce","nearestItems","center","getCenterPoint","distance","distanceBetweenPoints","push","sort","a","b","sizeA","getArea","sizeB","_index","slice","getNearestItem","native","eventHandlers","type","hovering","forEach","eventName","hoverEvent","createMouseEvent","addEventHandler","el","addHoverEvents","dblClickSpeed","options","onClick","clearTimeout","clickTimeout","setTimeout","call","stopImmediatePropagation","preventDefault","detectDoubleClick","length","eventHandler","handler","toUpperCase","substring","previousEvent","MouseEvent","exception","m","document","createEvent","initMouseEvent","canBubble","cancelable","view","detail","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","exception2","e","initEvent","BoxAnnotation","Element","[object Object]","mouseX","mouseY","useFinalPosition","width","height","this","getProps","ctx","save","lineWidth","borderWidth","strokeStyle","borderColor","fillStyle","backgroundColor","fillRect","strokeRect","restore","id","defaults","defaultRoutes","PI","Math","HALF_PI","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","LineAnnotation","epsilon","me","x2","y2","dy","dx","isFinite","label","enabled","content","labelRect","w2","h2","labelIsVisible","intersects","isOnLabel","setLineDash","borderDash","lineDashOffset","borderDashOffset","beginPath","moveTo","lineTo","stroke","line","font","fontString","size","style","family","textAlign","lines","isArray","count","i","text","widthCache","has","set","measureText","max","get","xPadding","yPadding","measureLabel","pos","xAdjust","yAdjust","pt","calculateLabelPosition","translate","rotate","rotation","radius","r","min","left","top","right","bottom","arc","closePath","rect","roundedRect","cornerRadius","fill","color","textYPosition","textBaseline","fillText","drawLabel","Map","chartElements","annotationTypes","box","chart","scales","Object","keys","scale","binds","originalHook","afterDataLimits","args","apply","annotations","range","axis","scaleID","scaleIDOption","scaleAnnotations","annotation","valueOrDefault","NEGATIVE_INFINITY","prop","value","getScaleLimits","changed","suggestedMin","suggestedMax","handleTickRangeOptions","adjustScaleRange","add","bindAfterDataLimits","updateElements","draw","_replay","events","indexOf","remove","drawTime","animation","numbers","properties","mode","chartAnims","animOpts","merge","animations","Animations","start","splice","Array","elType","calculateElementProperties","update","scaleValue","fallback","getPixelForValue","chartArea","NaN","endValue","isHorizontal","xScale","xScaleID","yScale","yScaleID","xMin","xMax","yMin","yMax","create","caller","clipArea","unclipArea","WeakSet","Chart","register","Annotation"],"mappings":"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"}